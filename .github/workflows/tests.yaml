---
name: Tests

on:
  pull_request: {}
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  rubocop_and_matrix:
    runs-on: ubuntu-24.04
    outputs:
      ruby: ${{ steps.ruby.outputs.versions }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Ruby ${{ matrix.ruby }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"
          bundler-cache: true
      - name: Run Rubocop
        run: bundle exec rake rubocop
      - id: ruby
        uses: voxpupuli/ruby-version@v1

  unit:
    needs: rubocop_and_matrix
    name: "Ruby ${{ matrix.ruby }} ${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-latest]
        # don't generate the matrix dynamically until we switch from puppet to openvox, puppet fails on Ruby 3.4
        #ruby: ${{ fromJSON(needs.rubocop_and_matrix.outputs.ruby) }}
        ruby: ['3.2', '3.3']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Output Ruby Environment
        run: bundle env
      - name: Cache modules
        id: modules
        uses: actions/cache@v4
        with:
          path: modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/Puppetfile') }}
      - name: Install modules
        if: steps.modules.outputs.cache-hit != 'true'
        run: bundle exec r10k puppetfile install
      - name: Unit tests
        run: bundle exec rake tests:unit

  tests:
    needs:
      - rubocop_and_matrix
      - unit
    runs-on: ubuntu-24.04
    name: Test suite
    steps:
      - run: echo Test suite complete
